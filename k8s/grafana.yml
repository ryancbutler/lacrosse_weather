apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app: grafana
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: grafana
      namespace: lacrosse-weather
    spec:
      containers:
        - env:
            - name: GF_DATE_FORMATS_INTERVAL_SECOND
              value: h:mm:ss a
            - name: GF_DATE_FORMATS_INTERVAL_MINUTE
              value: h:mm a
            - name: GF_DATE_FORMATS_INTERVAL_HOUR
              value: MMM DD h:mm a
            - name: GF_DATE_FORMATS_FULL_DATE
              value: MMM Do, YYYY @ h:mm:ss a
            - name: GF_AUTH_ANONYMOUS_ENABLED
              value: 'true'
            - name: GF_INSTALL_PLUGINS
              value: natel-discrete-panel
          image: grafana/grafana:latest
          imagePullPolicy: Always
          name: grafana
          ports:
            - containerPort: 3000
              name: http-grafana
              protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /etc/grafana/provisioning/dashboards/dashboard.yml
              name: grafana
              subPath: dashboard.yml
            - mountPath: /etc/grafana/provisioning/dashboards/Weather.json
              name: grafana
              subPath: Weather.json
            - mountPath: /etc/grafana/provisioning/datasources/automatic.yml
              name: grafana
              subPath: automatic.yml
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
        - configMap:
            defaultMode: 420
            name: grafana
          name: grafana
